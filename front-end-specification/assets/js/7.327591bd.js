(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{275:function(e,t,s){e.exports=s.p+"assets/img/codereview.fd1c566c.png"},287:function(e,t,s){"use strict";s.r(t);var a=s(14),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"code-review-规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-review-规范"}},[e._v("#")]),e._v(" Code Review 规范")]),e._v(" "),t("p",[e._v("code review 流程步骤：")]),e._v(" "),t("ol",[t("li",[e._v("基于 develop 拉取功能分支")]),e._v(" "),t("li",[e._v("在功能分支上进行任务开发")]),e._v(" "),t("li",[e._v("合并代码前，先更新 develop 分支，然后切回功能分支使用 "),t("code",[e._v("git rebase develop")]),e._v(" 将当前分支 rebase 到 develop 分支")]),e._v(" "),t("li",[e._v("推送代码后，发起 "),t("code",[e._v("merge request")]),e._v("，并指定一个团队成员进行 code review")]),e._v(" "),t("li",[e._v("code review 完毕后，进行 code review 的团队成员需要点击 "),t("code",[e._v("approve")]),e._v(" 后才允许进行合并")])]),e._v(" "),t("h2",{attrs:{id:"拉取新分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取新分支"}},[e._v("#")]),e._v(" 拉取新分支")]),e._v(" "),t("p",[e._v("在开始任务开发之前，本地拉取 develop 最新代码，并按照规范新建分支 "),t("code",[e._v("feature/功能名称-开发姓名")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-b")]),e._v(" feature/login-phl\n")])])]),t("h2",{attrs:{id:"rebase-develop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rebase-develop"}},[e._v("#")]),e._v(" Rebase Develop")]),e._v(" "),t("p",[e._v("完成任务开发后，此时 develop 分支可能有其他人已经合并的新功能，且与自己的改动点冲突，如果不执行 rebase 操作，那么当合并请求时，可能会出现冲突。")]),e._v(" "),t("p",[e._v("当出现冲突时，"),t("code",[e._v("current change")]),e._v(" 是 develop 的改动，"),t("code",[e._v("income change")]),e._v(" 是自己的改动。具体操作如下：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在当前开发分支提交代码")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-m")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"feat: XXX"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout develop\n ​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 切换到 develop 分支，拉取最新代码")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull\n ​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 切换回个人的开发分支，执行 rebase")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout feature/login-phl\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase develop\n ​\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果有冲突，先按照实际情况解决所有冲突，然后重新提交代码并继续合并。")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--continue")]),e._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 推送代码​")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push\n")])])]),t("h2",{attrs:{id:"merge-request"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge-request"}},[e._v("#")]),e._v(" Merge Request")]),e._v(" "),t("p",[e._v("将分支推送到远程后，在分支上选择发起 "),t("code",[e._v("merge request")]),e._v(" 请求.")]),e._v(" "),t("ol",[t("li",[e._v("要确认选择的目标分支是 develop")]),e._v(" "),t("li",[e._v("Assignee 选择自己，必须选择一个 reviewer，选择项目组成员")]),e._v(" "),t("li",[e._v("merge options 按照实际需要选择")]),e._v(" "),t("li",[e._v("检查 changed 文件，确保都是自己的改动，没有出现错误的改动")])]),e._v(" "),t("p",[t("img",{attrs:{src:s(275),alt:""}})]),e._v(" "),t("h2",{attrs:{id:"code-review"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-review"}},[e._v("#")]),e._v(" Code Review")]),e._v(" "),t("p",[e._v("发送改动详情给选择的 review 人员，review 人员查看时，要注意以下几点：")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("commit message")]),e._v(" 描述 准确清晰，符合 git 规范")]),e._v(" "),t("li",[e._v("同一个功能必须只有一个 commit 点，若多个 commit，则需要合并。一个合并请求可以包含多个功能或多个 commit")]),e._v(" "),t("li",[e._v("改动点必须和 "),t("code",[e._v("commit message")]),e._v(" 描述一致")]),e._v(" "),t("li",[e._v("代码的编写格式和用法必须符合规范")]),e._v(" "),t("li",[e._v("需要搞明白这次 MR 的功能是什么，如果不明白，请让代码提交人员讲清楚，有条件的话需要现场演示功能")])])])}),[],!1,null,null,null);t.default=v.exports}}]);